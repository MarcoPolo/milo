[env]
  TARGET          = { script = ["rustc -vV | sed -n 's|host: ||p'"] }
  COMMON_OPTIONS  = "-Z unstable-options --target ${TARGET}"
  RELEASE_OPTIONS = "-Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort"

[config]
  skip_core_tasks = true

[tasks.default]
  dependencies = ["all"]

[tasks.verify]
  dependencies = ["clean", "all"]

[tasks.all]
  dependencies = ["cpp", "wasm"]

[tasks.clean]
  run_task = { name = ["cargo-clean", "dist-clean"] }

[tasks.test]
  script = ["cd ../test-utils", "cargo test"]

[tasks.format-tools]
  script = ["cd tools", "prettier -w *.mjs **/*.mjs"]

[tasks.cargo-clean]
  command = "cargo"
  args    = ["clean"]

[tasks.dist-clean]
  script = "rm -rf dist"

[tasks.cpp]
  dependencies = ["cpp-headers", "cpp-libs"]

[tasks.cpp-libs]
  dependencies = ["cpp-release", "cpp-debug"]

[tasks.cpp-release]
  env      = { CONFIGURATION = "release", "CARGO_OPTIONS" = "--release", POSTBUILD_OPTIONS = "DEBUG:false" }
  run_task = "cpp-lib"

[tasks.cpp-debug]
  env      = { CONFIGURATION = "debug", "CARGO_OPTIONS" = "", POSTBUILD_OPTIONS = "DEBUG:true" }
  run_task = "cpp-lib"


[tasks.cpp-lib]
  script = [
    "mkdir -p dist/cpp/${CONFIGURATION}",
    "rm -rf dist/cpp/${CONFIGURATION}/*",
    "cargo build ${COMMON_OPTIONS} ${CARGO_OPTIONS} --out-dir target/cpp/${CONFIGURATION}",
    "cp target/cpp/${CONFIGURATION}/libmilo.a target/headers/milo.h dist/cpp/${CONFIGURATION}",
    "node ./tools/postbuild-cpp.mjs	${CONFIGURATION} ${POSTBUILD_OPTIONS}",
  ]

[tasks.cpp-headers]
  script = ["cbindgen --quiet --output target/headers/milo.h"]

[tasks.wasm]
  dependencies = ["wasm-release", "wasm-debug"]

[tasks.wasm-release]
  env      = { CONFIGURATION = "release", "WASMPACK_OPTIONS" = "--release", POSTBUILD_OPTIONS = "DEBUG:false" }
  run_task = "wasm-module"

[tasks.wasm-debug]
  env      = { CONFIGURATION = "debug", "WASMPACK_OPTIONS" = "--debug", POSTBUILD_OPTIONS = "DEBUG:true" }
  run_task = "wasm-module"

[tasks.wasm-module]
  script = [
    "mkdir -p dist/wasm",
    "rm -rf dist/wasm/${CONFIGURATION}",
    "wasm-pack build -d target/wasm/${CONFIGURATION} -t nodejs ${WASMPACK_OPTIONS}",
    "cp -a target/wasm/${CONFIGURATION} dist/wasm/${CONFIGURATION}",
    "rm -rf dist/wasm/${CONFIGURATION}/.gitignore dist/wasm/${CONFIGURATION}/README.md",
    "node ./tools/postbuild-wasm.mjs	${CONFIGURATION} ${POSTBUILD_OPTIONS}",
  ]

[tasks.wasm-npm]
  dependencies = ["wasm-release"]
  script = [
    "cd dist/wasm/release",
    "yq -eMP -i -o json '.name=\"@ShogunPanda/milo\"' package.json",
    "yq -eMP -i -o json '.repository=\"https://github.com/ShogunPanda/milo.git\"' package.json",
    "cp ../../../../.npmrc .",
    "npm publish",
  ]
